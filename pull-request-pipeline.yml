trigger: none

pr:
- release
- master

# Different users have different machine setups, we run the build three times, on ubuntu, osx, and windows
strategy:
  matrix:
    linux:
      imageName: "ubuntu-16.04"
    mac:
      imageName: "macos-10.14"
    windows:
      imageName: "vs2017-win2016"
  maxParallel: 3

pool:
  vmImage: $(imageName)

variables:
  currentImage: $(imageName)

steps:
  # Runs 'mvn package'
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'

  # Everything after here is for testing that core builds with the new test case updates.

  # This task pulls the <version> value from the pom.xml file, so we can set it to the variable $version.
  - task: PowerShell@2
    condition: eq(variables.currentImage, 'ubuntu-16.04')
    inputs:
      targetType: 'inline'
      script: |
        [xml]$pomXml = Get-Content .\pom.xml
        # version
        Write-Host $pomXml.project.version
        $version=$pomXml.project.version
        Write-Host "##vso[task.setvariable variable=version]$version"

  # Prints out the build version, for debugging purposes
  - bash: echo Pulled version from pom.xml => $(version)
    condition: eq(variables.currentImage, 'ubuntu-16.04')

  # Signing, for now, occurs for all builds, SNAPSHOT or release. So we need a valid
  # signing key. The next two steps download the public and private keys from the
  # secure library files. 
  - task: DownloadSecureFile@1
    condition: eq(variables.currentImage, 'ubuntu-16.04')
    displayName: 'Download public key.'
    inputs:
      secureFile: public.key

  - task: DownloadSecureFile@1
    condition: eq(variables.currentImage, 'ubuntu-16.04')
    displayName: 'Download private key.'
    inputs:
      secureFile: private.key

  # Import both the private and public keys into gpg for signing.
  - bash: |
      gpg --import --no-tty --batch --yes $(Agent.TempDirectory)/public.key
      gpg --import --no-tty --batch --yes $(Agent.TempDirectory)/private.key
      gpg --list-keys --keyid-format LONG
      gpg --list-secret-keys --keyid-format LONG
    displayName: 'Import signing keys.'
    condition: eq(variables.currentImage, 'ubuntu-16.04')

  - task: Bash@3
    condition: eq(variables.currentImage, 'ubuntu-16.04')
    inputs:
      targetType: 'inline'
      script: |
        git config --global user.email "markiantorno@gmail.com"
        git config --global user.name "Mark Iantorno"

  - task: Bash@3
    condition: eq(variables.currentImage, 'ubuntu-16.04')
    inputs:
      targetType: 'inline'
      script: |
        cat >$(System.DefaultWorkingDirectory)/settings.xml <<EOL
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                      https://maven.apache.org/xsd/settings-1.0.0.xsd">
          <servers>
            <server>
              <id>ossrh</id>
              <username>$(SONATYPE_USER)</username>
              <password>$(SONATYPE_PASS)</password>
            </server>
            <server>
              <id>sonatype-nexus-snapshots</id>
              <username>$(SONATYPE_USER)</username>
              <password>$(SONATYPE_PASS)</password>
            </server>
            <server>
              <id>sonatype-nexus-staging</id>
              <username>$(SONATYPE_USER)</username>
              <password>$(SONATYPE_PASS)</password>
            </server>
            <server>
              <id>sonatype-nexus-releases</id>
              <username>$(SONATYPE_USER)</username>
              <password>$(SONATYPE_PASS)</password>
            </server>
            <server>
              <id>$(PGP_KEYNAME)</id>
              <passphrase>$(PGP_PASSPHRASE)</passphrase>
            </server>
          </servers>
          <profiles>
            <profile>
              <id>release</id>
              <activation>
                <activeByDefault>true</activeByDefault>
              </activation>
              <properties>
                <gpg.keyname>$(PGP_KEYNAME)</gpg.keyname>
              </properties>
            </profile>
          </profiles>
        </settings>
        EOL

  - task: Bash@3
    condition: eq(variables.currentImage, 'ubuntu-16.04')
    inputs:
      targetType: 'inline'
      script: |
        cd $(System.DefaultWorkingDirectory)/
        git clone https://github.com/hapifhir/org.hl7.fhir.core.git
        
  - task: Maven@3
    condition: eq(variables.currentImage, 'ubuntu-16.04')
    displayName: 'Update Property in Core Library'
    inputs:
      mavenPomFile: '$(System.DefaultWorkingDirectory)/org.hl7.fhir.core/pom.xml'
      goals: 'versions:set-property '
      options: '--settings $(System.DefaultWorkingDirectory)/settings.xml -X -Dproperty=validator_test_case_version -DnewVersion=$SNAPSHOT_VERSION'
      publishJUnitResults: false

  - task: Maven@3
    condition: eq(variables.currentImage, 'ubuntu-16.04')
    displayName: 'Test Core Build'
    inputs:
      mavenPomFile: '$(System.DefaultWorkingDirectory)/org.hl7.fhir.core/pom.xml'
      goals: install
      options: '--settings $(System.DefaultWorkingDirectory)/settings.xml -X'
      publishJUnitResults: false
